Terminales = { boolean switch case break function if input int return string var void output entero cadena id + /= = , ; : ( ) { } / || < eof }  
NoTerminales = { P B F H A C T K E S BB L Q X R U V W S1 W1 EE RR UU VV D  }
Axioma = P


Producciones = {
	P -> F P                                //// 1       
	P -> B P                                //// 2  
	P -> eof                                //// 3

	F -> function H id ( A ) { C }          //// 4
	H -> T                                  //// 5
	H -> void                               //// 6

	A -> T id K                             //// 7
	A -> void                               //// 8

	K -> , T id K                           //// 9
	K -> lambda                             //// 10

	C -> B C                                //// 11
	C -> lambda                             //// 12

	B -> if ( E ) S                         //// 13
	B -> var T id ;                         //// 14
	B -> S                                  //// 15
	B -> switch ( E ) { BB }                //// 16

	T -> boolean                            //// 17
	T -> int                                //// 18
	T -> string                             //// 19

	BB -> case entero : C D BB              //// 20
	BB -> lambda                            //// 21

	D -> break ;                            //// 22
	D -> lambda                             //// 23

	S -> id S1 ;                            //// 24
	S1 -> = E                               //// 25
	S1 -> /= E                              //// 26
	S1 -> ( L )                             //// 27

	L -> E Q                                //// 28
	L -> lambda                             //// 29

	Q -> , E Q                              //// 30
	Q -> lambda                             //// 31

	S -> output E ;                         //// 32
	S -> input id ;                         //// 33
	S -> return X ;                         //// 34

	X -> E                                  //// 35
	X -> lambda                             //// 36

	E -> R EE                               //// 37
	EE -> || R EE                           //// 38
	EE -> lambda                            //// 39

	R -> U RR                               //// 40
	RR -> < U RR                            //// 41
	RR -> lambda                            //// 42

	U -> V UU                               //// 43
	UU -> + V UU                            //// 44
	UU -> lambda                            //// 45

	V -> W VV                               //// 46
	VV -> / W VV                            //// 47
	VV -> lambda                            //// 48

	W -> id W1                              //// 49
	W -> ( E )                              //// 50
	W -> entero                             //// 51
	W -> string                             //// 52

	W1 -> ( L )                             //// 53
	W1 -> lambda                            //// 54

}
